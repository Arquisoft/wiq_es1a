openapi: 3.0.0
info:
  title: Gateway Service API
  version: 1.0.0
  description: API gateway for managing authentication, user information, game statistics, and questions.

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: http://51.142.183.63:8000
    description: Production server

paths:
  /health:
    get:
      summary: Health Check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK

  /login:
    post:
      summary: Authenticate User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example:
              username: testUsername
              password: testPassword
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MTYyMzkwMjJ9.1
                username: test
                createdAt: 2021-06-01T00:00:00Z
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Invalid credentials
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /adduser:
    post:
      summary: Add User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example:
              username: testUsername
              password: testPassword
      responses:
        "200":
          description: User added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MTYyMzkwMjJ9.1
                username: test
                createdAt: 2021-06-01T00:00:00Z
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Username already exists. Please choose a different username.

  /userInfo/{username}:
    get:
      summary: Get User Information
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: Username for which to retrieve information
      responses:
        "200":
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
              example:
                _id: 60b6f7b3b3b3b3b3b3b3b3b3
                username: testUsername
                createdAt: 2021-06-01T00:00:00Z
                games:
                  - correctAnswers: 10
                    incorrectAnswers: 5
                    points: 10
                    avgTime: 10
                    _id: 60b6f7b3b3b3b3b3b3b3b3b3
                  - correctAnswers: 2
                    incorrectAnswers: 12
                    points: 15
                    avgTime: 7
                    _id: 65ea02cf891b09479a383477
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /userGames:
    get:
      summary: Get User Games
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: Username for which to retrieve games
      responses:
        "200":
          description: Games retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
                example:
                  - gameMode: clasico
                    correctAnswers: 10
                    incorrectAnswers: 5
                    points: 10
                    avgTime: 10
                    _id: 60b6f7b3b3b3b3b3b3b3b3b3
                    questions:
                      - pregunta: ¿Cuál es la capital de Francia?
                        respuestas:
                          - "Londres"
                          - "Madrid"
                          - "Berlín"
                          - "París"
                        correcta: "París"
                        respuesta: "París"
                      - pregunta: ¿Cuál es el río más largo del mundo?
                        respuestas:
                          - "Amazonas"
                          - "Nilo"
                          - "Mississippi"
                          - "Yangtsé"
                        correcta: "Amazonas"
                        respuesta: "Nilo"
                  - gameMode: bateria
                    correctAnswers: 2
                    incorrectAnswers: 12
                    points: 15
                    avgTime: 7
                    _id: 65ea02cf891b09479a383477
                    questions:
                      - pregunta: ¿Quién pintó la Mona Lisa?
                        respuestas:
                          - "Leonardo da Vinci"
                          - "Pablo Picasso"
                          - "Vincent van Gogh"
                          - "Claude Monet"
                        correcta: "Leonardo da Vinci"
                        respuesta: "Leonardo da Vinci"
                      - pregunta: ¿Cuál es el elemento más abundante en la Tierra?
                        respuestas:
                          - "Oxígeno"
                          - "Hidrógeno"
                          - "Nitrógeno"
                          - "Hierro"
                        correcta: "Oxígeno"
                        respuesta: "Hidrógeno"
                      
        "400":
          description: Username is not present
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Invalid name
        "404":
          description: User is not present in the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found

  /saveGameList:
    post:
      summary: Save Game List
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameList"
            example:
              username: testUsername
              gameMode: clasico
              gameData:
                - correctAnswers: 10
                  incorrectAnswers: 5
                  points: 10
                  avgTime: 10
                - correctAnswers: 2
                  incorrectAnswers: 12
                  points: 15
                  avgTime: 7
      responses:
        "200":
          description: Game list saved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "400":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Error al guardar partida en la lista
        "404":
          description: Invalid request (questions limit exceeded)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Usuario no encontrado

  /group/list:
    get:
      summary: Get Group List
      responses:
        "200":
          description: Group list retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupList"
              example:
                groups:
                  - _id: 60b6f7b3b3b3b3b3b3b3b3b3
                    name: testGroup
                    createdAt: 2021-06-01T00:00:00Z
                    members:
                      - test1
                      - test2
                      - test3
                    __v: 0
                  - _id: 60b6f7b3b3b3b3b3b3b3b3b3
                    name: testGroup2
                    createdAt: 2021-06-01T00:00:00Z
                    members:
                      - test4
                      - test5
                      - test6
                    __v: 0
                  
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /group/add:
    post:
      summary: Create Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of the group creator
                name:
                  type: string
                  description: Name of the group to create
      responses:
        "200":
          description: Group created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
              example:
                message: Group created successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                EmptyGroupName:
                  value:
                    error: Group name cannot be empty
                GroupNameExists:
                  value:
                    error: Group name already exists

        "404":
          description: User is not present in the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /group/{groupName}:
    get:
      summary: Get Group Information
      parameters:
        - in: path
          name: groupName
          schema:
            type: string
          description: Name of the group for which to retrieve information
      responses:
        "200":
          description: Group information retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupInfo"
              examples:
                GroupExample:
                  summary: Example of group information retrieval
                  value:
                    group:
                      _id: "661e8828d59b7c02682d24bc"
                      name: "Manzana"
                      createdAt: "2024-04-16T14:16:08.328Z"
                      members:
                        - "admin"
                        - "vinuesa"
                      __v: 1
        "404":
          description: Group not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Group not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /group/join:
    post:
      summary: Join Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupId:
                  type: string
                  description: ID of the group to join
                name:
                  username: string
                  description: Username of the user joining the group
      responses:
        "200":
          description: Group created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
              example:
                message: User joined the group successfully
        "400":
          description: User already a member of this group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User already a member of this group
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                UserNotFound:
                  value:
                    error: User not found in the database
                GroupNotFound:
                  value:
                    error: Group not found in the database
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /friends:
    get:
      summary: Get Friends of User
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Username for which to retrieve friends
      responses:
        "200":
          description: Friends retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FriendList"
              example:
                friends:
                  - test1
                  - test2
                  - test3
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/UserInfo"
              example:
                - _id: 60b6f7b3b3b3b3b3b3b3b3b3
                  username: testUsername
                  createdAt: 2021-06-01T00:00:00Z
                  games: []
                - _id: 60b6f7b3b3b3b3b3b3b3b3b3
                  username: testUsername2
                  createdAt: 2021-06-01T00:00:00Z
                  games:
                    - correctAnswers: 1
                      incorrectAnswers: 1
                      points: 1
                      avgTime: 10
                      _id: 60b6f7b3b3b3b3b3b3b3b3b3
                      questions:
                        - pregunta: ¿Cuál es la capital de Francia?
                          respuestas:
                            - "Londres"
                            - "Madrid"
                            - "Berlín"
                            - "París"
                          correcta: "París"
                          respuesta: "París"
                        - pregunta: ¿Cuál es el río más largo del mundo?
                          respuestas:
                            - "Amazonas"
                            - "Nilo"
                            - "Mississippi"
                            - "Yangtsé"
                          correcta: "Amazonas"
                          respuesta: "Nilo"
                    - correctAnswers: 1
                      incorrectAnswers: 1
                      points: 1
                      avgTime: 2
                      _id: 65ea02cf891b09479a383477
                      questions:
                        - pregunta: ¿Quién pintó la Mona Lisa?
                          respuestas:
                            - "Leonardo da Vinci"
                            - "Pablo Picasso"
                            - "Vincent van Gogh"
                            - "Claude Monet"
                          correcta: "Leonardo da Vinci"
                          respuesta: "Leonardo da Vinci"
                        - pregunta: ¿Cuál es el elemento más abundante en la Tierra?
                          respuestas:
                            - "Oxígeno"
                            - "Hidrógeno"
                            - "Nitrógeno"
                            - "Hierro"
                          correcta: "Oxígeno"
                          respuesta: "Hidrógeno"
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /users/search:
    get:
      summary: Search Users
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: Username to search for his non-friends
      responses:
        "200":
          description: Friends retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FriendListArray"
              example:
                friends:
                  - username: test1
                    password: test1
                    createdAt: 2021-06-01T00:00:00Z
                    games: 
                      - correctAnswers: 10
                        incorrectAnswers: 5
                        points: 10
                        avgTime: 10
                        _id: 60b6f7b3b3b3b3b3b3b3b3b3
                      - correctAnswers: 2
                        incorrectAnswers: 12
                        points: 15
                        avgTime: 7
                        _id: 65ea02cf891b09479a383477
                  - username: test2
                    password: test2
                    createdAt: 2021-06-01T00:00:00Z
                    games:
                      - correctAnswers: 10
                        incorrectAnswers: 5
                        points: 10
                        avgTime: 10
                        _id: 60b6f7b3b3b3b3b3b3b3b3b3
                      - correctAnswers: 2
                        incorrectAnswers: 12
                        points: 15
                        avgTime: 7
                        _id: 65ea02cf891b09479a383477
                  - username: test3
                    password: test3
                    createdAt: 2021-06-01T00:00:00Z
                    games:
                      - correctAnswers: 10
                        incorrectAnswers: 5
                        points: 10
                        avgTime: 10
                        _id: 60b6f7b3b3b3b3b3b3b3b3b3
                      - correctAnswers: 2
                        incorrectAnswers: 12
                        points: 15
                        avgTime: 7
                        _id: 65ea02cf891b09479a383477
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found
        "500":
          description: Invalid request (questions limit exceeded)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /users/add-friend:
    post:
      summary: Get Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                friendUsername:
                  type: string
      responses:
        "200":
          description: Friends added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
              example:
                message: Friends added successfully
        "400":
          description: Friend already added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Friend already added
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error
  
  /users/remove-friend:
    post:
      summary: Get Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                friendUsername:
                  type: string
      responses:
        "200":
          description: Friends added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
              example:
                message: Friends removed successfully
        "400":
          description: Friend not found in the user's friend list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Friend not found in the user's friend list
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: User not found
        "500":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Internal Server Error

  /questions:
    get:
      summary: Get Questions
      parameters:
        - in: query
          name: tematica
          schema:
            type: string
            enum: [paises, literatura, cine, arte, programacion, "futbolistas", "clubes", "baloncestistas", "politica", "videojuegos"]
          description: Category of questions to retrieve
        - in: query
          name: n
          schema:
            type: integer
            maximum: 10000
          description: Questions to retrieve
        - in: query
          name: locale
          schema:
            type: string
            enum: [en, es]
          description: Locale of questions to retrieve

      responses:
        "200":
          description: Questions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionList"
              example:
                - pregunta: ¿Cuál es la forma de gobierno de Ecuador?
                  respuestas:
                    [
                      "presidencialismo",
                      "federación",
                      "monarquía constitucional",
                      "monarquía",
                    ]
                  correcta: "presidencialismo"
                - pregunta: ¿En qué evento histórico participó Sudáfrica?
                  respuestas:
                    [
                      "Bloque BASIC",
                      "Acuerdo de Prespa",
                      "Tratado de Amistad",
                      "anexión de Crimea por Rusia",
                    ]
                  correcta: "Bloque BASIC"
        "400":
          description: Invalid request (questions limit exceeded)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: El límite de preguntas son 10000
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: El límite de preguntas son 10000

    post:
      summary: Get Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tematicas:
                  type: string
                  example: "[\"paises\",\"literatura\",\"cine\",\"arte\",\"programacion\",\"futbolistas\",\"clubes\",\"baloncestistas\",\"politica\",\"videojuegos\"]"
                n:
                  type: integer
                locale:
                  type: string
                  enum: [en, es]
      responses:
        "200":
          description: Questions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionList"
              example:
                - pregunta: ¿Cuál es la forma de gobierno de Ecuador?
                  respuestas:
                    [
                      "presidencialismo",
                      "federación",
                      "monarquía constitucional",
                      "monarquía",
                    ]
                  correcta: "presidencialismo"
                - pregunta: ¿En qué evento histórico participó Sudáfrica?
                  respuestas:
                    [
                      "Bloque BASIC",
                      "Acuerdo de Prespa",
                      "Tratado de Amistad",
                      "anexión de Crimea por Rusia",
                    ]
                  correcta: "Bloque BASIC"
        "400":
          description: Invalid request (questions limit exceeded)
          content:
            application/json:
              example:
                - error: El límite de preguntas son 10000
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                - error: Los generadores de preguntas aún no se han cargado. Por favor, inténtalo de nuevo más tarde.

  /stats:
    get:
      summary: Get Statistics
      parameters:
        - in: query
          name: user
          schema:
            type: string
          description: Username for which to retrieve statistics
        - in: query
          name: gamemode
          schema:
            type: string
            enum: [clasico, bateria, calculadora]
          description: Game mode for which to retrieve statistics
      responses:
        "200":
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stats"
              example:
                username: admin
                gamemode: clasico
                nGamesPlayed: 17
                avgPoints: 0.5882352941176471
                totalPoints: 10
                totalCoorectQuestions: 10
                totalIncorrectQuestions: 156
                ratioCorrect: 6.024096385542169
                avgTime: 10
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Error al obtener las estadísticas

  /saveGame:
    post:
      summary: Save Game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
      responses:
        "200":
          description: Game saved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /ranking:
    get:
      summary: Get Ranking
      parameters:
        - in: query
          name: gamemode
          schema:
            type: string
            description: Game mode for which to retrieve ranking
        - in: query
          name: filterBy
          schema:
            type: string
            enum: [avgPoints, totalPoints, ratioCorrect, avgTime, avgPoints]        
      responses:
        "200":
          description: Ranking retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RankingList"
              example:
                - username: test1
                  avgPoints: 0.5882352941176471
                - username: test2
                  avgPoints: 0.6782352941176471
                - username: test3
                  avgPoints: 0.1232352941176471
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Error al obtener el ranking

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        createdAt:
          type: string
          format: date-time

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        games:
          $ref: "#/components/schemas/GameList"

    UserInfo:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        createdAt:
          type: string
          format: date-time
        games:
          type: array
          items:
            $ref: "#/components/schemas/Game"

    GameList:
      type: object
      properties:
        games:
          type: array
          items:
            type: object

    Game:
      type: object
      properties:
        gameMode:
          type: string
          enum: [clasico, bateria, calculadora]
        correctAnswers:
          type: integer
        incorrectAnswers:
          type: integer
        points:
          type: integer
        avgTime:
          type: number
        _id:
          type: string  
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"

    Question:
      type: object
      properties:
        pregunta:
          type: string
          description: Question text
        respuestas:
          type: array
          description: List of possible answers
          items:
            type: string
        correcta:
          description: Correct answer
          type: string
        respuesta:
          description: User's answer
          type: string

    Stats:
      type: object
      properties:
        username:
          type: string
        gamemode:
          type: string
        nGamesPlayed:
          type: integer
        avgPoints:
          type: number
        totalPoints:
          type: integer
        totalCoorectQuestions:
          type: integer
        totalIncorrectQuestions:
          type: integer
        ratioCorrect:
          type: number
        avgTime:
          type: number

    SuccessMessage:
      type: object
      properties:
        message:
          type: string

    RankingList:
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          avgPoints:
            optional: true
            type: number
          totalPoints:
            optional: true
            type: integer
          ratioCorrect:
            optional: true
            type: number
          avgTime:
            optional: true
            type: number

    Error:
      type: object
      properties:
        error:
          type: string

    Save:
      type: object
      properties:
        username:
          type: string
        gameMode:
          type: string
          enum: [clasico, bateria, calculadora]
        gameData:
          correctAnswers: 
            type: integer
          incorrectAnswers: 
            type: integer
          points: 
            type: integer
          avgTime: 
            type: number
    
    RegisterResponse:
      type: object
      properties:
        username:
          type: string
        createdAt:
          type: string
          format: date-time
        token:
          type: string

    FriendList:
      type: object
      properties:
        friends:
          type: array
          items:
            type: string

    FriendListArray:
      type: array
      properties:
        friends:
          type: array
          items:
            $ref: "#/components/schemas/User"

    GroupInfo:
      Group:
      type: Group
      properties:
        _id:
          type: string
          description: ID del grupo
        name:
          type: string
          description: Nombre del grupo
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del grupo
        members:
          type: array
          items:
            type: string
          description: Lista de miembros del grupo
        __v:
          type: integer
          description: Versión del esquema
    
    GroupList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: "#/components/schemas/Group"
    
    Group:
      type: object
      properties:
        _id:
          type: string
          description: Group ID
        name:
          type: string
          description: Group name
        createdAt:
          type: string
          format: date-time
          description: Group creation date
        members:
          type: array
          items:
            type: string
          description: Group members
